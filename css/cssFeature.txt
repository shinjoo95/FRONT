1.CSS 특징
    - 기본 스타일 시트 : 웹 브라우저에 기본으로 내장되어 웹 브라우저에 표시되는 요소들의 글꼴이나 크기, 색상, 굵기, 
                     문단 설정과 같은 스타일이 미리 정의된 파일 또는 문서 양식을 말함.

    - 적용 우선순위와 개별성 : 정의된 속성보다 사용자가 정의한 스타일 속성이 우선 적용됨
                         같은 태그 요소의 선택자가 여럿일 때 마지막 스타일 속성이 높이 적용됨

  선택자               예                     점수
====================================================
전체 선택자        *                            0
태그 선택자        div p h1                     1
가상 요소 선택자    ::before ::after             1
클래스 선택자      .box, .title                 10
가상 클래스 선택자  :hover :visited :link        10
아이디 선택자      #title #main                 100
인라인 스타일      style="color:red"           1,000

    - 상속 : 부모 요소에 적용된 스타일을 자식 요소가 그대로 물려받아 적용되는 현상

    - 단위 : 절대 단위와 상대 단위로 나뉨
        - 절대 단위 : px(pixel) 모니터의 화면을 구성하는 사각형 1개의 크기를 의미, css에서 사용할 수 있는 크기 단위 중 가장 기본
        - 상대 단위
            - %  : 해당 속성의 상위 요소 속성값에 상대적인 크기를 가짐
            - em : 부모 요소의 텍스트 크기에 상대적인 크기를 가짐
            - rem: html 태그의 텍스트 크기에 상대적인 크기를 가짐
            - vw : 뷰포트의 너비를 기준으로 상대적인 크기를 가짐
            - vh : 뷰포트의 높이를 기준으로 상대적인 크기를 가짐

    - 색상 표기법
        - 키워드 표기법 : 색상의 영문명을 속성값으로 사용하는 방법 
        - RGB 색상 표기법 : rgb(red, green, blue) / rgb(255,0,0) 
        - HEX 표기법 : #을 붙이는게 특징. 00이 가장 낮은 값이고, ff가 가장 높은 값임 / #ff0000

2. 텍스트 속성으로 텍스트 꾸미기

    - font-family : 글꼴을 지정할 수 있음. 한글로 된 글꼴이나 공백이 있는 글꼴명은 "" 감싸야됨
        - font-family:BatangChe, "Times New Roman";

    - 글꼴 유형
        - serif : 삐침이 있는 명조 계열의 글꼴
        - sans-serif : 삐침이 없고 굵기가 일정한 고딕 계열의 글꼴
        - monospace : 텍스트 폭과 간격이 일정한 글꼴
        - fantasy : 화려한 글꼴
        - cursive : 손으로 쓴 것 같은 필기체 계열의 글꼴

    - font-size : 텍스트 크기를 변경하고 싶을 때 사용하는 속성 
        - font-size : 15px;
    - font-weight : 텍스트의 굵기를 지정하는 데 사용.
        - font-weight : 100; (100~900)
        - font-weight : lighter; (normal : 400, bold : 700, lighter : 부모 요소보다 얇게, bolder : 부모의 요소보다 굵게)
    - font-style : 글꼴의 스타일을 지정할 떄 사용
        - font-style : italic; (normal : 기본 형태로 표시, italic : 이탤릭체로 표시, oblique : 기울임꼴로 표시)
    - font-variant : 영문 텍스트를 크기가 작은 대문자로 변경할 때 사용
        - font-variant : small-caps; (normal : 텍스트를 변환하지 않음, small-caps : 텍스트를 크기가 작은 대문자로 변환)
    - text-align : 텍스트를 정렬할 때 사용
        - text-align : right; (left : 왼쪽, right : 오른쪽, center : 중앙, justify : 양쪽)
    - text-decoration : 텍스트를 꾸며 주기 위해 사용 / 텍스트에 선을 긋는 것
        - text-decoartion : none; 
            (none : 텍스트  장식을 모두 지움, line-through : 텍스트 중간을 관통하는 선을 그음, overline : 텍스트 위에 선을 그음, underline : 텍스트 아래에 선을 그음)
    - letter-spacing : 글자 사이를 조절할 때 사용 
        - letter-spacing : normal;/15px;
    - line-height : 텍스트 한 줄의 높이를 지정할 때 사용
        - line-height : normal; 
            (normal : 웹 브라우저에서 정한 기본값, 숫자 : 현재 사이즈에 입력한 숫자를 곱한 값, 퍼센트 : 현재 사이즈에 입력한 비율을 곱한 값, 크기 : 입력한 크기 적용)

    - font-size 속성은 글자 자체의 크기를 지정하지만 모든 텍스트는 웹 브라우저에 표시될 때 위아래로 일정 크기의 여유 공간을 가지고 있음.
        이러한 여유 공간을 전부 포함한 글줄 사이의 간격을 행간이라 하며 line-height로 제어함, line-height가 font-size보다 작으면 
        윗줄 아랫줄의 텍스트가 겹쳐 보여 가독성이 떨어질 수 있음으로 line-height는 항상 font-size보다 크기 지정하는 편이 좋음  

3. 박스 모델을 구성하는 속성 다루기
    
    - margin : 요소의 외부 여백을 의미
    - border : 요소의 테두리(경계선)를 의미
    - padding : 요소의 내부 여백을 의미 
    - content : 요소의 내용을 의미 

    - margin 영역
        - 박스 모델에서 가장 외부에 있는 영역으로, 요소의 외부 여백을 담당
        - margin : <margin-top> <margin-right> <margin-bottom> <margin-left>
        - margin 겹침 현상 : 같은 레벨에 있는 요소들의 margin 영역이 중첩되면 더 큰 값을 가진 margin 영역으로 병합되어 출력되는 현상
                            (20px + 30px => 30px)

    - border 영역
        - margin보다 안쪽에 있으며, 요소의 테두리(경계선)를 담당
        - border : <border-width> <border-style> <color>;
            - width : 테두리의 굵기 지정, 단위를 포함한 크기를 사용
            - style : 테두리의 모양
                - none : 테두리 없음
                  hidden : 테두리를 화면에서 감춤
                  solid : 테두리를 실선으로 그림
                  double : 테두리를 이중 실선으로 그림
                  dotted : 테두리를 점선으로 그림
                  dashed : 테두리를 dotted보다 긴 점선으로 그림
                  groove : 테두리가 파인 것처럼 그림
                  ridge : 테두리가 튀어나온 것처럼 그림
                  inset : 테두리를 요소가 파인 것처럼 그림
                  outset : 테두리를 요소가 튀어나온 것처럼 그림 
    
    - padding 영역
        - margin, border 영역보다 안쪽에 있으며 요소의 내부 여백을 담당
        - margin 영역에서 사용하는 속성과 형식이 매우 비슷

    - content 영역 
        - 다른 박스 모델의 구성 요소와는 다르게 content 영역은 content 영역 자체를 다루는 속성은 없음
        - content 영역을 제어하는 속성처럼 width 속성과 height 속성이 있음

        - box-sizing 
            - content-box : width, height 속성의 적용 범위를 content 영역으로 제한
            - border-box : width, height 속성의 적용 범위를 border 영역으로 제한 
    
    - 박스 모델의 성격과 display 성격
        - 블록 성격 : hn, p, div 태그를 사용했을 때 요소의 너비가 컨텐츠 유무와 상관없이 항상 가로 한 줄을 다 차지하는 것
                    hn, p, div 태그를 여러 번 사용하면 무조건 줄 바꿈이 됨.

        - 인라인 성격 : a, span, strong 태그를 사용했을 때 요소의 너비를 콘텐츠만큼만 차지하는 성격
                     태그를 여러 번 사용할 때 웹 브라우저의 수평 공간이 남아 있으면 한 줄로 배치

        - 인라인 블록 성격 : 요소의 너비가 콘텐츠의 크기만큼만 차지하지만, 그 외의 성격은 블록 성격을 가지는 복합적인 성격
                         img 태그를 사용할 때 웹 브라우저의 수평 공간이 남아 있으면 한 줄로 배치
                    
        - display 속성 : html 태그가 기본으로 가지고 있는 박스 모델의 성격은 display 속성을 사용하면 변경할 수 있음
                        속성값으로는 block, inline, inline-block 을 사용함 블록 성격인 태그를 인라인 성격으로 바꾸고 싶다면
                        display 속성값을 inline으로 지정하면 됨. 반대로 인라인 성격인 태그를 블록 성격이나 인라인 블록 성격으로 바꾸고 싶다면
                        display 성격을 inline-block 으로 지정하면 됨.

    - 배경 속성으로 요소의 배경 설정하기 
        - background-color : 요소의 배경에 색상을 넣을 수 있음
        - background-image : 이미지를 넣을 수 있음, 삽입할 이미지의 경로를 url()함수로 지정
            - 요소의 배경 크기가 반드시 있어야 됨. 요소의 배경에 이미지를 삽입하는 원리기 때문에 요소 배경의 너비와 높이를 지정하지 않으면 이미지가 보이지 않음
            - 이미지의 크기가 요소의 배경 크기와 맞지 않으면 어색해 보임. 배경크기가 이미지보다 작으면 원본 이미지가 잘림, 크면 반복으로 채워짐 
        - background-repeat : 이미지의 반속 설정
            - no-repeat : 이미지를 반복하지 않음
            - repeat-x : 이미지를 가로 방향으로 반복
            - repeat-y : 이미지를 세로 뱡향으로 반복 
            - repeat : 이미지를 가로와 세로 방향으로 반복
            - round : 이미지를 반복하되 이미지가 요소에 딱 맞도록 크기를 자동 조절
            - space : 이미지가 잘리지 않도록 반복
        - background-size : 이미지 크기를 지정
            - auto : 이미지 크기를 유지
            - cover : 이미지의 가로 세로 비율을 유지하면서 크기를 확대하거나 축소해 요소의 배경을 꽉 채움
            - contain : 이미지의 가로 세로 비율을 유지하면서 이미지가 배경 요소 안에 들어가도록 크기를 확대하거나 축소
            - <너비 높이> : 이미지 크기를 직접 지정
        - background-position : 삽입하려는 이미지의 위치를 설정
            - x / left, center, right / x축(가로) 방향의 위치를 지정
              y / top, center, bottom / y축(세로) 방향의 위치를 지정
            공통 / px, rem, em, %      / 위치를 직접 지정
        - background-attachment : 삽입된 이미지를 스크롤할 때, 이미지의 작동 방식을 결정
            - local : 삽입된 이미지가 요소와 웹 브라우저에서 모두 스크롤 됨
            - scroll : 삽입된 이미지가 요소에서는 고정되지만, 웹 브라우저에서는 스크롤 됨
            - fixed : 삽입된 이미지가 요소와 웹 브라우저에서 모두 고정 됨
        - background 속성으로 한 번에 저장하기 
            - background : <color 속성값> <image 속성값> <repeat 속성값> <position 속성값/ size 속성값> <attachment 속성값>;

4. 위치 속성으로 html 요소 배치하기
    - position : html 요소를 기본 흐름에서 벗어나 좌푯값에 따라 배치할 때 사용
        - static : 요소를 기본 흐름에 따라 배치
        - relative : 요소를 기본 흐름에 따라 배치하지만, 좌표 속성을 사용
        - absolute : 요소를 기본 흐름에서 벗어나 절대적인 좌표 위치에 따라 배치
        - fixed : 요소를 기본 흐름에서 벗어나 절대적인 좌표 위치에 따라 배치, 스크롤해도 해당 위치에 고정
        - sticky : 요소를 static 값처럼 기본 흐름에 따라 배치하지만, 지정한 좌표에의 임계점에 이르면 fixed 값처럼 화면에 고정 
        
    - float : 요소를 화면에 배치하는 또 다른 방법
        - none : float 속성을 적용하지 않음
        - left : 대상 요소를 공중에 띄워 왼쪽에 배치하면서 다음에 오는 요소를 주변에 자연스럽게 배치
        - right : 대상 요소를 공중에 띄워 오른쪽에 배치하면서 다음에 오는 요소를 주변에 자연스럽게 배치
    
    - clear : float 속성을 해제할 때 사용하는 속성, float 속성이 대상 요소의 다음 요소에 영향을 주기 때문에 영향을 주지 않도록 해제해야됨
        - left : float 속성의 left 값을 해제
        - right : float 속성의 right 값을 해제
        - both : float 속성의 left와 right 값을 모두 해제 

5. 전환 효과 속성 적용하기
    - 전환 : CSS에서 한 요소에 적용된 스타일 속성값을 다른 속성값으로 변하게 하는 것 
        - transition-property : <속성값 / 미리 정해진 키워드>; // 전환 효과를 적용할 대상 선정
        - transition-duration : <시간>;                   // 전환 효과의 지속 시간을 설정
        - transition-delay : <시간>;                      // 전환 효과의 발생을 지연
        - transition-timing-function                     // 전환 효과의 진행 속도 지정
            - linear : 처음 속도와 마지막 속도가 일정
              ease : 처음에는 속도가 점점 빨라지다가 중간부터 점점 느려짐
              ease-in : 처음에는 속도가 느리지만 완료될 때까지 점점 빨라짐
              ease-out : 처음에는 속도가 빠르지만 완료될 때까지 점점 느려짐
              ease-in-out : 처음에는 속도가 느리지만 점점 빨라지다가 다시 점점 느려짐
              cubic-bezier(p1, p2, p3, p4) : 사용자가 정의한 속도로 진행 

6. 애니메이션 속성으로 전환 효과 제어하기
- 정지된 이미지를 연속적으로 보여 줘서 움직이는 것처럼 보이게 합니다. 애니메이션 속성은 전환 효과 속성과 다르게 키 프레임(@keyframe)을 정의해서 실행해야 합니다.
  키 프레임은 애니메이션이 진행되는 과정에서 특정 시점에서 발생해야 하는 여러 작업을 정의하는 문법입니다. 따라서 키 프레임에는 시작과 종료에 해당하는 최소 2개 시점에 대한 스타일이 정의되어야 함

  @keyframe <키 프레임명>{
    0%{/* CSS코드 */}
    n%{/* CSS코드 */}
    100%{/* CSS코드 */}
  }

    - animation-name 속성 : 특정 요소에서 적용할 키 프레임명을 지정
        - animation-name : <키 프레임명>;
    - animation-duration 속성 : 애니메이션을 지속할 시간을 설정 
        - animation-duration : <지속 시간>;
    - animation-delay 속성 : 애니메이션 실행을 지연
        - animation-delay : <지연 시간>;
    - animation-fill-mode 속성 : 애니메이션이 끝나도 원래 상태로 돌아가지 않고 애니메이션이 종료된 시점의 상태를 유지할 수 있음 
    - animation-iterator-count 속성 : 실행 횟수를 조절
        - animation-iterator-count : <횟수>;
    - animation-play-state 속성 : 재생 상태를 지정  // 실행 도중에 일시 정지하거나 다시 재생할 수 있음
        - pause : 애니메이션의 실행을 일시 정지
        - running : 애니메이션을 실행 
    - animation-direction 속성 : 진행 방향을 지정
        - animation-direction : <속성값>;
            - normal : 애니메이션의 진행 방향을 키 프레임에 정의된 시간 순서대로 진행(to -> from)
            - reverse : 애니메이션의 진행 방향을 키 프레임에 정의된 시간 순서의 역으로 진행(from -> to)
            - alternate : 애니메이션이 1회 이상 실행될 경우 홀수 번째는 normal로, 짝수 번째는 reverse로 진행
            - alternate-reverse : 애니메이션이 1회 이상 실행될 경우 홀수 번째는 reverse로, 짝수 번째는 normal로 진행
    - animation 속성으로 한 번에 지정하기
        - animation : <name> <duration> <timing-function> <delay> <iteration-count> <direction> <fill-mode> <play-state>;
        