CSS : 하나의 웹 문서 안에 구조를 설계하는 태그와 디자인을 담당하는 스타일을 같이 묶어 두는 것이 문제가 되기 시작하여
      W3C는 웹 문서에서 구조와 디자인을 분리하기로 했고, 그 방법의 하나로 CSS라는 언어가 탄생함.
     
    - h1{color : red;}
      -- -----   ---
    선택자  속성    값
          ----------
            선언부 

    - 선택자 : css 속성을 적용할 대상(태그, 요소)을 지정하는 영역입니다.
    - 선언부 : 선택자로 지정된 대상(태그, 요소)에 적용할 css속성과 값을 적는 영역입니다.

1. css 적용
    - 내부 스타일 시트 사용하기 : html 파일 내부에 css코드를 작성하는 방법
        - <style>
            /* css 코드 */
        </style>

    - 외부 스타일 시트 사용하기 : css코드를 작성하는 별도 파일을 만들어 html 문서와 css를 연결하는 방법
        - <link rel="stylesheet" href="css 파일 경로">

    - 인라인 스타일 사용하기 : html 태그에서 사용할 수 있는 style 속성에 css코드를 작성하는 방법
                          태그에 직접 css코드를 작성하는 방식이라서 css의 기본 문법 형식에서 선택자 부분이 필요 없음.
        - <태그 style="css 코드"></태그>

2. 기본 선택자 사용하기
   전체 선택자 : html에서 사용할 수 있는 모든 요소를 한 번에 선택자로 지정하는 방법으로 * 기호를 사용해 표시합니다.
    - *{/* CSS 코드 */}

   태그 선택자 : html 태그명으로 선택자를 지정하는 방법, 선택자에 지정된 태그명과 일치하는 모든 요소를 한 번에 선택합니다. 
    - 태그명{/* CSS 코드 */}

   아이디 선택자 : html 태그에서 사용할 수 있는 id 속성값을 이용해 선택자를 지정하는 방법, 속성값 앞에는 # 기호를 붙여 구분
    - #id속성값{/* CSS 코드 */}

   클래스 선택자 : html 태그에서 사용할 수 있는 class 속성값을 이용해 선택자를 지정하는 방법, 속성값 앞에 .기호를 붙입니다.
    - .class속성값{/* CSS 코드 */}

   기본 속성 선택자 : html 태그에서 사용할 수 있는 속성과 값을 사용해 선택자를 지정하는 방법
    - [속성]{/* CSS 코드 */}
      [속성=값]{/* CSS 코드 */}

   문자열 속성 선택자 : 태그가 가진 속성값이 특정한 문자열과 일치하는 요소를 선택자로 지정하는 방법
    - [속성 ~= 문자열] : 속성값에 문자열이 포함되어 있으면 선택(단어 기준)
      [속성 := 문자열] : 속성값이 문자열과 같거나 문자열 -으로 시작하면 선택
      [속성 ^= 문자열] : 속성값이 문자열로 시작하면 선택
      [속성 $= 문자열] : 속성값이 문자열로 끝나면 선택
      [속성 *= 문자열] : 속성값에 문자열이 포함되면 선택(전체 값 기준)

3. 조합 선택자 사용하기 : 기본 선택자와 함께 사용했을 때 선택자의 의미를 더 풍부하게 해 주는 선택자 방법
    그룹 선택자 : 여러 선택자를 하나로 그룹 지을 때 사용. 선택자와 선택자는 , 기호로 구분
     - 선택자1, 선택자2, ... ,선택지n{/* CSS코드 */}

    자식 선택자 : 부모 요소의 하위에 있는 자식 요소에 스타일을 적용할 때 사용. 2개 이상의 선택자가 사용되며, >기호로 구분.
     - 부모 선택자 > 자식 선택자{/* CSS코드 */}

    하위 선택자 : 선택자의 범위를 특정 부모 요소의 하위 요소로 한정하는 방법. 2개 이상의 선택자를 사용하고, 선택자와 선택자는 공백으로 구분
     - 선택자1 선택자2 선택자3...{/* CSS코드 */}

    인접 형제 선택자 : 앞에서 지정한 선택자 요소 바로 다음에 있는 형제 관계 요소를 선택자로 지정. 2개 이상의 선택자를 사용하고, 선택자와 선택자는 +기호로 구분 
     - 이전 선택자 + 대상 선택자{/* CSS코드 */}

    일반 형제 선택자 : 이전 선택자 뒤에 오는 형제 관계 요소를 모두 선택자로 지정. 2개 이상의 선택자를 사용하며, 선택자와 선택자는 ~기호로 구분
     - 이전 선택자 ~ 대상 선택자{/* CSS코드 */}

4. 가상 요소 선택자 사용하기 : html 문서에 명시적으로 작성된 구성 요소는 아니지만 선택자 지정 방법을 말함 
     - 기준 선택자 :: 가상 요소 선택자{/* CSS코드 */}
        - :: before : 콘텐츠 앞의 공간을 선택
          :: after  : 콘텐츠 뒤의 공간을 선택

5. 가상 클래스 선택자 사용하기 : 요소의 상태를 이용해 선택자를 지정하는 방법
    - 기준 요소 : 가상 클래스 선택자{/* CSS코드 */}

    링크 가상 클래스 선택자 : a 태그에서 발생할 수 있는 링크 상태를 이용해 선택하는 방법
     - :link : 한 번도 방문하지 않은 링크일 때 선택
       :visited : 한번이라도 방문한 적이 있는 링크일 때 선택

    동적 가상 클래스 선택자 : 사용자의 어떤 행동에 따라 동적으로 변하는 상태를 이용해 선택자를 지정하는 방법
     - :hover : 요소에 마우스를 올리면 해당 태그가 선택자로 지정
       :active : 요소를 마우스로 클릭하고 있는 동안 해당 태그가 선택자로 지정

    입력 요소 가상 클래스 선택자 : 입력 요소의 특정 상태를 이용해 선택자로 지정하는 방법
     - :focus : 입력 요소에 커서가 활성화되면 선택자로 지정 
       :checked : 체크박스가 표시되어 있으면 선택자로 지정
       :disabled : 상호작용 요소가 비활성되면 선택자로 지정
       :enabled : 상호작용 요소가 활성화되면 선택자로 지정

    구조적 가상 클래스 선택자 : html 태그의 사용 위치, 다른 태그와의 관계에 따라 요소를 선택하는 방법
     - E:first-child : E 요소의 첫 번째 자식 요소를 선택자로 지정
       E:last-child : E 요소의 마지막 자식 요소를 선택자로 지정
       E:nth-child(n) : E 요소가 부모 요소의 자식 요소 중 n번째 순서가 맞으면 선택
       E:nth-last:child(n) : E 요소가 부모 요소의 자식 요소 중 마지막에서 n번째 순서가 맞으면 선택
       E:nth-of-type(n) : 부모 요소의 자식 요소 중 n번째로 등장하는 E 요소를 선택
       E:nth-last-of-type(n) : 부모 요소의 자식 요소 중 마지막에서 n번째로 등장하는 E 요소를 선택
       E:first-of-type : 부모 요소의 자식 요소 중 첫 번째로 등장하는 E 요소를 선택
       E:last-of-type : 부모 요소의 자식 요소 중 마지막으로 등장하는 E 요소를 선택

