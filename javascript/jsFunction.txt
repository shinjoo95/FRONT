자바스크립트 함수
1. 함수
- 어떤 목적을 가지고 작성한 코드를 모아 둔 블록문, 코드를 함수로 만들면 함수를 호출해 함수 내부에 모아 둔 여러 줄의 코드를 한 번에 실행할 수 있음.

2. 함수를 정의하는 방법
    - 함수 선언문으로 함수 정의하기 : function 키워드 다음에 함수를 식별할 수 있도록 식별자를 붙이면 됨. 식별자 뒤에는 소괄호(())를 붙임.
        - function 식별자(){}
            function gugudan(){
                for(let i = 1; i<=9; i++){
                    console.log(`3 * ${i} = ${3 * i}`);
                }
            }
    - 함수 표현식으로 함수 정의하기 : 함수는 객체에서 파생된 자료형이다. 자료형은 변수에 할당할 수 있어야 됨. 
                                따라서 함수도 변수에 할당할 수 있는데, 이를 이용한 함수 정의 방법을 함수 표현식이라 함. 
                                함수 표현식은 변수에 할당하는 함수에 식별자가 있으면 네이밍 함수, 없으면 익명 함수로 구분. 
                                const 변수명 = function(){};    //익명 함수
                                const 변수명 = function 식별자(){}; //네이밍 함수 
                                
                            - 함수 선언문으로 정의한 gugudan() 함수 표현식      
                                const gugudan = fuction gugudan(){
                                    for(let i = 1; i<=9; i++){
                                        console.log(`3 * ${i} = ${3 * i}`);
                                    }
                                };
                                gugudan();  //함수 호출   
                            - function 키워드 다음에 식별자가 없는 익명 함수도 함수를 호출하는 데 문제 없음
                                const gugudan = fuction(){
                                    for(let i = 1; i<=9; i++){
                                        console.log(`3 * ${i} = ${3 * i}`);
                                    }
                                };
                                gugudan();  //함수 호출  

    - 화살표 함수로 함수 정의하기 : ES6에서 추가된 함수 정의 방법으로, 화살표를 사용해 함수를 정의하는 방법
                             () => {};
                             화살표 함수는 익명 함수로만 정의할 수 있어서 함수를 호출하려면 정의된 함수를 변수에 할당하는 방법인 함수 표현식을 사용해야 됨
                                    const gugudan = () => {
                                    for(let i = 1; i<=9; i++){
                                        console.log(`3 * ${i} = ${3 * i}`);
                                    }
                                };
                                gugudan();  
                            - ES6가 지원되는 개발 환경에서는 가장 많이 사용되는 방법   

                            
                                